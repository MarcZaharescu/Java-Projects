package email;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Enumeration;
import java.util.Properties;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;



/**
 * Servlet implementation class ControllerDataBase
 */
@WebServlet("/ControllerDataBase")
public class ControllerDataBase extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public ControllerDataBase() {
        super();
      
    }


	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		String value[] = ReadUserDetails();
		
		Connection dbConn = setUpConnection(value);

	}
	
	
	public static Connection setUpConnection(String value[]) {

		System.setProperty("jdbc.drivers", "org.postgresql.Driver");
		String dbName = "jdbc:postgresql://dbteach2/" + value[1];
		Connection dbConn = null;
System.out.println(value[1]);
		try {
			dbConn = DriverManager.getConnection(dbName, value[1], value[0]);
		} catch (SQLException e) {

			e.printStackTrace();
		}

		try {
			Class.forName("org.postgresql.Driver");
		}

		catch (ClassNotFoundException ex) {
			System.out.println("Driver not found");
		}

		System.out.println("PostgreSQL driver registered.");

		if (dbConn != null) {
			System.out.println("Database accessed!");
		}

		else {
			System.out.println("Failed to make connection");
		}
		return dbConn;
	}

	public static String[] ReadUserDetails() {
		String[] key = new String[2];
		String[] value = new String[2];
		int i = 0;
		int j = 0;

		try {
			File file = new File("src/userDetails");
			FileInputStream fileInput = new FileInputStream(file);
			Properties properties = new Properties();
			properties.load(fileInput);
			fileInput.close();

			Enumeration<Object> enuKeys = properties.keys();
			while (enuKeys.hasMoreElements()) {
				key[i] = (String) enuKeys.nextElement();
				value[j] = properties.getProperty(key[i]);

				i++;
				j++;
			}
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return value;
	}


	

}
